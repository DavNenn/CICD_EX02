name: Go CI pipeline

on:
    push:
        branches:
            - main
    pull_request:
        branches:
            - main

env:
  APP_DB_USERNAME: postgres
  APP_DB_PASSWORD: admin
  APP_DB_NAME: database

jobs:
  build:
    name: Build and Test Code
    runs-on: ubuntu-latest

    steps:
      # Step 1: Set up job
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.23'

      # Step 2: Run actions/checkout@v3
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 3: Set up Go environment
      - name: Set up Go environment
        run: |
          go version
          go env

      # Step 4: Start PostgreSQL via docker-compose
      - name: Start PostgreSQL (docker-compose)
        run: |
          docker compose up -d

      # Step 5: Build the Go project
      - name: Build Go project
        run: go build -v

      # Step 6: Run tests
      - name: Run Go tests
        run: go test -v

  sonarqube:
    name: SonarQube
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}